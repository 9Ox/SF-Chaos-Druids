/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package scripts;

import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import org.tribot.api.General;
import org.tribot.api2007.Banking;
import scripts.actions.*;
import scripts.framework.Action;
import scripts.framework.Manager;
import scripts.framework.RSCondition;
import scripts.framework.RSFrame;

/**
 *
 * @author Nolan
 */
public class SFChaosDruidsGui extends RSFrame {

    /**
     * Creates new SFChaosDruidsGui.
     * 
     * @param message The message to be displayed when the gui is disposed.
     */
    public SFChaosDruidsGui(final Object message) {
        super(message);
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scriptPanel = new javax.swing.JPanel();
        lowHerbCheck = new javax.swing.JCheckBox();
        highHerbCheck = new javax.swing.JCheckBox();
        foodBox = new javax.swing.JComboBox();
        startButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("SF Chaos Druids");

        scriptPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lowHerbCheck.setText("Low herbs");

        highHerbCheck.setText("High herbs");

        foodBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Trout", "Salmon", "Tuna", "Lobster" }));

        startButton.setText("Start");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout scriptPanelLayout = new javax.swing.GroupLayout(scriptPanel);
        scriptPanel.setLayout(scriptPanelLayout);
        scriptPanelLayout.setHorizontalGroup(
            scriptPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(scriptPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(scriptPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(highHerbCheck)
                    .addComponent(lowHerbCheck))
                .addGap(26, 26, 26)
                .addGroup(scriptPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(foodBox, 0, 83, Short.MAX_VALUE)
                    .addComponent(startButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        scriptPanelLayout.setVerticalGroup(
            scriptPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(scriptPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(scriptPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(foodBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lowHerbCheck))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(scriptPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(highHerbCheck, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(startButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scriptPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scriptPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        startButtonPressed(evt);
        Manager.setHasClosed(true);
    }//GEN-LAST:event_startButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows 7".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SFChaosDruidsGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new SFChaosDruidsGui(null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox foodBox;
    private javax.swing.JCheckBox highHerbCheck;
    private javax.swing.JCheckBox lowHerbCheck;
    private javax.swing.JPanel scriptPanel;
    private javax.swing.JButton startButton;
    // End of variables declaration//GEN-END:variables

    @Override
    public HashMap<String, String> processOptions() {
        HashMap<String, String> ops = new HashMap<>();
        if(highHerbCheck.isSelected()) {
            Collections.addAll(Variables.lootList, 3051, 2485, 219, 217, 215, 211, 209, 207);
        }
        if(lowHerbCheck.isSelected()) {
            Collections.addAll(Variables.lootList, 205, 203, 201, 199);
        }
        ops.put("Food name", foodBox.getSelectedItem().toString());
        return ops;
    }

    @Override
    public ArrayList<RSCondition> processTerminateConditions(HashMap<String, String> options) {
        ArrayList<RSCondition> conditions = new ArrayList<>();
        conditions.add(new RSCondition() {
            @Override
            public boolean isConditionMet() {
                return Banking.isBankScreenOpen() && Banking.find(foodBox.getSelectedItem().toString()).length <= 0;
            }
        });
        return conditions;
    }

    @Override
    public ArrayList<Action> processActions() {
        ArrayList<Action> actions = new ArrayList<>();
        actions.add(new OpenBankScreen());
        actions.add(new DepositItems());
        actions.add(new WithdrawFood());
        actions.add(new CloseBankScreen());
        actions.add(new ClickLogWest());
        actions.add(new TraverseToDruidsFromLog());
        actions.add(new ClickLogEast());
        actions.add(new TraverseToBankFromLog());
        if(highHerbCheck.isSelected() || lowHerbCheck.isSelected()) {
            actions.add(new LootItem());
        }
        actions.add(new ClickAttack());
        General.println(actions);
        return actions;
    }
}
